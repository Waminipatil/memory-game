{"version":3,"sources":["components/Card.js","App.js","index.js"],"names":["Card","card","handleChoice","flipped","disabled","className","src","process","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQA6BeA,EA1BF,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAO3C,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBACEE,UAAU,QACVC,IAAKC,eAAyBN,EAAKK,IACnCE,IAAI,eAEN,qBACEH,UAAU,OACVC,IAAKC,6BACLC,IAAI,YACJC,QAlBY,WACbL,GACHF,EAAaD,YCFbS,G,MAAa,CACjB,CAAEJ,IAAK,oBAAqBK,SAAS,GACrC,CAAEL,IAAK,oBAAqBK,SAAS,GACrC,CAAEL,IAAK,kBAAmBK,SAAS,GACnC,CAAEL,IAAK,oBAAqBK,SAAS,GACrC,CAAEL,IAAK,oBAAqBK,SAAS,GACrC,CAAEL,IAAK,mBAAoBK,SAAS,KAsFvBC,MAnFf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOT,EAAP,KAAiBkB,EAAjB,KAGMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC3B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB4B,GAAIH,KAAKC,cAEtCR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAKLf,EAAe,SAACD,GACpBiB,EAAYG,EAAapB,GAAQkB,EAAalB,IAKhD6B,qBAAU,WACJZ,GAAaE,IACfE,GAAY,GACRJ,EAAUZ,MAAQc,EAAUd,KAC9BS,GAAS,SAACgB,GACR,OAAOA,EAAUH,KAAI,SAAC3B,GACpB,OAAIA,EAAKK,MAAQY,EAAUZ,IAClB,2BAAKL,GAAZ,IAAkBU,SAAS,IAEpBV,QAIb+B,KAEAC,YAAW,kBAAMD,MAAa,QAGjC,CAACd,EAAWE,IAGf,IAAMY,EAAY,WAChBb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAACiB,GAAD,OAAeA,EAAY,KACpCZ,GAAY,IAQd,OAJAQ,qBAAU,WACRP,MACC,IAGD,sBAAKlB,UAAU,MAAf,UACE,6CACA,wBAAQI,QAASc,EAAjB,sBAEA,qBAAKlB,UAAU,YAAf,SACGS,EAAMc,KAAI,SAAC3B,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASiB,GAAajB,IAASmB,GAAanB,EAAKU,QAC1DP,SAAUA,GAJLH,EAAK4B,SAQhB,8BACE,wCAAWb,WCrFnBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7d55ed68.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = ({ card, handleChoice, flipped, disabled }) => {\r\n  const handleClick = () => {\r\n    if (!disabled) {\r\n      handleChoice(card);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className={flipped ? \"flipped\" : \"\"}>\r\n        <img\r\n          className=\"front\"\r\n          src={process.env.PUBLIC_URL + card.src}\r\n          alt=\"card front\"\r\n        />\r\n        <img\r\n          className=\"back\"\r\n          src={process.env.PUBLIC_URL + \"/img/cover.png\"}\r\n          alt=\"card back\"\r\n          onClick={handleClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { useEffect, useState } from \"react\";\nimport Card from \"./components/Card\";\nimport \"./App.css\";\n\nconst cardImages = [\n  { src: \"/img/helmet-1.png\", matched: false },\n  { src: \"/img/potion-1.png\", matched: false },\n  { src: \"/img/ring-1.png\", matched: false },\n  { src: \"/img/scroll-1.png\", matched: false },\n  { src: \"/img/shield-1.png\", matched: false },\n  { src: \"/img/sword-1.png\", matched: false },\n];\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  // shuffle card\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  // handle a choice\n\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // Compare choice\n\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards((prevCards) => {\n          return prevCards.map((card) => {\n            if (card.src === choiceOne.src) {\n              return { ...card, matched: true };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  // reset choices & increase turn\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns((prevTurns) => prevTurns + 1);\n    setDisabled(false);\n  };\n\n  //automatically start the game\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map((card) => (\n          <Card\n            key={card.id}\n            card={card}\n            handleChoice={handleChoice}\n            flipped={card === choiceOne || card === choiceTwo || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n      <div>\n        <p>Turns: {turns}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}